------------------------------------------------------------------------
-- Project ???
--
-- Sierpinski space
------------------------------------------------------------------------

{-# OPTIONS --prop #-}

module Topology.Core where

open import Agda.Primitive
open import Topology.Logic
open import Topology.PowerSet
open import Relation.Binary.PropositionalEquality
open import Function.Base 

------------------------------------------------------------------------
-- Topology on a set X
record topology {ℓ} (X : Set ℓ) : Setω₁ where
    field
        τ : ℙ (ℙ X) -- the subsetset of open subsets of X
        ∅-open : empty X ∈ τ
        full-open : full X ∈ τ
        ∩-open : ∀ U V → U ∈ τ → V ∈ τ → U ∩ V ∈ τ
        union-open : ∀ {ℓ : Level} {I : Set ℓ} (S : I → ℙ X) → (∀ i → S i ∈ τ) → union S ∈ τ

discrete-topology : {ℓ : Level} (X : Set ℓ) → topology X
discrete-topology X =
    record
        { τ = λ _ → ⊤ᵖ
        ; ∅-open = ⊤ᵖ-intro
        ; full-open = ⊤ᵖ-intro
        ; ∩-open = λ _ _ _ _ → ⊤ᵖ-intro
        ; union-open = λ _ _ → ⊤ᵖ-intro
        }

-- trivial topology
indiscrete-topology : {ℓ : Level} (X : Set ℓ) → topology X
indiscrete-topology X =
    record
        { τ = λ U → ∃ᵖ U → ∀ᵖ U
        ; ∅-open = λ p → ⊥ᵖ-elim (∃ᵖ-elim (λ { a ()}) p)
        ; full-open = λ p → ∀ᵖ-intro (λ _ → ⊤ᵖ-intro)
        ; ∩-open =
            λ U V p q r →
            ∀ᵖ-intro (λ x →
                ∧ᵖ-intro
                (∀ᵖ-elim (p (∃ᵖ-elim (λ { a (∧ᵖ-intro a∈U _) → ∃ᵖ-intro a∈U}) r)) x)
                (∀ᵖ-elim (q (∃ᵖ-elim (λ { a (∧ᵖ-intro _ a∈V) → ∃ᵖ-intro a∈V}) r)) x))
        ; union-open =
            λ S Si-open p →
            ∀ᵖ-intro (λ x →
                ∃ᵖ-elim (λ y a∈∪S →
                    ∃ᵖ-elim (λ i y∈Si →
                        ∃ᵖ-intro (∀ᵖ-elim (Si-open i (∃ᵖ-intro y∈Si)) x)) a∈∪S) p)
        }

-- Proof that B is a base
isBase : {ℓ k : Level} {X : Set ℓ} {I : Set k}
    → (I → ℙ X)
    → Prop
isBase {X = X} {I = I} B = 
    (∀ᵖ λ (x : X) → (∃ᵖ (λ (i : I) → x ∈ B i)))
    ∧ᵖ
    (∀ᵖ (λ (i : I) → (∀ᵖ λ (j : I) → (∃ᵖ (λ (J : ℙ I) → B i ∩ B j ⊆ᵖ (unionᵇ B J) ))))) -- sem popravil 
    
-- Proof that B is a base for topology T
isBaseOfTopology : {ℓ k : Level} {X : Set ℓ} {I : Set k}
    → (I → ℙ X)
    → topology X 
    → Prop
isBaseOfTopology {X = X} {I = I} B T = 
    ∀ᵖ λ (U : ℙ X) → U ∈ topology.τ T 
        → ∃ᵖ (λ (J : ℙ I) → U ≡ᵖ unionᵇ B J) -- Mogoče je dovolj sam v eno smer enakost?
        -- → (U ⊆ᵖ (λ x → x ∈ U → ∃ᵖ λ (i : I) → x ∈ B i ∧ᵖ B i ⊆ᵖ U)) -- Al je tuki res čudno? Al jst ne štekam?

-- Lemma: inclusion transitivity
∈⊆∈ : {ℓ k : Level} {A : Set ℓ} 
    → (a : A) 
    → (S T : ℙ A)
    → a ∈ S
    → S ⊆ T -- TODO tu imamo tezavo, ker bi zeleli s p 
    → a ∈ T
∈⊆∈ a S T ainS SunderT = SunderT a ainS 

-- -- Topology generated by a base
-- baseGeneratedTopology : {ℓ k : Level} {X : Set ℓ} {I : Set k}
--     → (B : I → ℙ X)
--     → (isBase B)
--     → topology X
-- baseGeneratedTopology {X = X} {I = I} B ib = 
--     record
--         {
--         τ =  λ (U : ℙ X) → U ≡ᵖ (λ (x : X) → ∃ᵖ (λ (i : I) → x ∈ B i ∧ᵖ B i ⊆ᵖ U))
--             -- → ∀ᵖ (λ x → x ∈ U 
--             --     → ∃ᵖ (λ (i : I) → x ∈ B i ∧ᵖ B i ⊆ᵖ U))
--         ; ∅-open = ∧ᵖ-intro 
--             (∀ᵖ-intro (λ x xin0 → ⊥ᵖ-elim xin0))
--             (∀ᵖ-intro (λ x xinB → ⊥ᵖ-elim ( ∃ᵖ-elim (↑ (∧ᵖ-elim₂ ( ↑ ( {! xinB  !})))) {!   !}))
                
--                 -- {! λ (i : I) → (empty I) → (B i) x !}
                
--                 -- (∃ᵖ-elim (λ i → ∧ᵖ-elim₂ (xinB x))) 
--                 --     x (∃ᵖ-elim (λ i → ∧ᵖ-elim₁ (xinB x)))

--                 -- → {! ∀ᵖ-intro (λ (i : I) → i ∈ (empty I) → (B i) x)  !}
--                 -- ∃ᵖ-intro (λ (i : I) → 
--                 --     (∈⊆∈ x (B i) (empty X) ))
                
--                 -- ∃ᵖ-elim {! ∃ᵖ-elim (λ y → (xinB x)) !}
--                 -- {! ∧ᵖ-elim₂ (∃ᵖ-elim (xinB))  (∧ᵖ-elim₁ ( ∃ᵖ-elim (xinB x))) !}
--             )
--         ; full-open = 
--             ∧ᵖ-intro 
--             (∀ᵖ-intro λ x x∈X → 
--                 {! !}) 
--             {!   !}
--         -- ∧ᵖ-intro 
--         --     (∀ᵖ-intro (λ x xiX → {!   ∧ᵖ-elim₂ ib ∧ᵖ-elim₁ ib !}))
--         --     {!   !}
--         ; ∩-open = λ U V openU openV →  ∧ᵖ-intro
--             {!   !}
--             {!   !}
--         ; union-open = λ S i → ∧ᵖ-intro 
--             {!   !} 
--             {!   !}
--         }




-- baseGeneratedTopology : {ℓ k : Level} {X : Set ℓ} {I : Set k}
--     → (B : I → ℙ X)
--     → (isBase B)
--     → topology X
-- baseGeneratedTopology {X = X} {I = I} B ib = 
--     record
--         {
--         τ = λ (U : ℙ X) → ∃ᵖ (λ (J : ℙ I) → U ≡ᵖ unionᵇ B J)
--         ; ∅-open = ∃ᵖ-intro 
--             (∧ᵖ-intro 
--                 (∀ᵖ-intro λ x x∈X → ⊥ᵖ-elim x∈X) 
--                 (∀ᵖ-intro (λ x x∈UB → 
--                   ⊥ᵖ-elim (
--                     ∃ᵖ-elim (λ i i∈I → ∧ᵖ-elim₁ i∈I) x∈UB))))
--         ; full-open = 
--             ∃ᵖ-intro 
--               (∧ᵖ-intro 
--                 (∀ᵖ-intro λ x x∈X → 
--                   ∧ᵖ-elim₁ {! ib  !})
--                 -- (∀ᵖ-intro (λ x x∈X → 
--                 --   ∃ᵖ-elim (λ i i∈I → 
--                 --     ∃ᵖ-intro 
--                 --       (∧ᵖ-intro 
--                 --         {!   !} 
--                 --         i∈I)) 
--                 --     (∧ᵖ-elim₁ ( {!   !} )))) 
--                 (∀ᵖ-intro (λ x x∈UB → ⊤ᵖ-intro)))
--         ; ∩-open = λ U V Uopen Vopen → 
--             ∃ᵖ-intro 
--               (∧ᵖ-intro 
--                 {!   !}
--                 {!   !}) 
--         ; union-open = λ B BiOpen → 
--             ∃ᵖ-intro 
--               (∧ᵖ-intro 
--                 {!   !}
--                 {!   !})
--         }
